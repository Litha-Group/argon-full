{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rohan\\\\Desktop\\\\Projects\\\\litha_argon\\\\src\\\\components\\\\index-page\\\\Spinners.js\";\nimport React from \"react\"; // reactstrap components\n\nimport { Button, Row, Col, Spinner } from \"reactstrap\"; // Core Components\n\nconst colors = [\"primary\", \"secondary\", \"success\", \"danger\", \"warning\", \"info\", \"light\", \"default\"];\n\nconst SpinnersBase = _ref => {\n  let {\n    type\n  } = _ref;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Col, {\n    md: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-3 mt-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"small\", {\n    className: \"text-uppercase font-weight-bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 11\n    }\n  }, type, \" Spinners\")), /*#__PURE__*/React.createElement(Spinner, {\n    color: \"\",\n    type: type,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"sr-only\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, \"Loading...\"), /*#__PURE__*/React.createElement(Button, {\n    className: \"ml-2 mb-2\",\n    color: \"primary\",\n    disabled: true,\n    size: \"sm\",\n    type: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Spinner, {\n    color: \"\",\n    type: type,\n    size: \"sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"sr-only\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  }, \"Loading...\")), /*#__PURE__*/React.createElement(Button, {\n    className: \"mb-2\",\n    color: \"primary\",\n    disabled: true,\n    size: \"sm\",\n    type: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Spinner, {\n    color: \"\",\n    type: type,\n    size: \"sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }), \" Loading...\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"small\", {\n    className: \"text-uppercase font-weight-bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, \"Colors\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }), colors.map((prop, key) => {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      key: key,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Spinner, {\n      color: prop,\n      type: type,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 15\n      }\n    }), \" \", /*#__PURE__*/React.createElement(\"span\", {\n      className: \"sr-only\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 15\n      }\n    }, \"Loading...\"));\n  })));\n};\n\nfunction Spinners() {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"h4 text-success font-weight-bold mb-2 mt-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, \"Spinners\"), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(SpinnersBase, {\n    type: \"border\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(SpinnersBase, {\n    type: \"grow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default Spinners;","map":{"version":3,"sources":["C:/Users/Rohan/Desktop/Projects/litha_argon/src/components/index-page/Spinners.js"],"names":["React","Button","Row","Col","Spinner","colors","SpinnersBase","type","map","prop","key","Spinners"],"mappings":"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","sourcesContent":["import React from \"react\";\r\n\r\n// reactstrap components\r\nimport { Button, Row, Col, Spinner } from \"reactstrap\";\r\n\r\n// Core Components\r\n\r\nconst colors = [\r\n  \"primary\",\r\n  \"secondary\",\r\n  \"success\",\r\n  \"danger\",\r\n  \"warning\",\r\n  \"info\",\r\n  \"light\",\r\n  \"default\",\r\n];\r\n\r\nconst SpinnersBase = ({ type }) => {\r\n  return (\r\n    <>\r\n      <Col md=\"6\">\r\n        <div className=\"mb-3 mt-5\">\r\n          <small className=\"text-uppercase font-weight-bold\">\r\n            {type} Spinners\r\n          </small>\r\n        </div>\r\n        <Spinner color=\"\" type={type}></Spinner>\r\n        <span className=\"sr-only\">Loading...</span>\r\n\r\n        <Button\r\n          className=\"ml-2 mb-2\"\r\n          color=\"primary\"\r\n          disabled\r\n          size=\"sm\"\r\n          type=\"button\"\r\n        >\r\n          <Spinner color=\"\" type={type} size=\"sm\"></Spinner>\r\n          <span className=\"sr-only\">Loading...</span>\r\n        </Button>\r\n        <Button\r\n          className=\"mb-2\"\r\n          color=\"primary\"\r\n          disabled\r\n          size=\"sm\"\r\n          type=\"button\"\r\n        >\r\n          <Spinner color=\"\" type={type} size=\"sm\"></Spinner> Loading...\r\n        </Button>\r\n        <br></br>\r\n        <br></br>\r\n        <small className=\"text-uppercase font-weight-bold\">Colors</small>\r\n        <br></br>\r\n        <br></br>\r\n        {colors.map((prop, key) => {\r\n          return (\r\n            <React.Fragment key={key}>\r\n              <Spinner color={prop} type={type}></Spinner>{\" \"}\r\n              <span className=\"sr-only\">Loading...</span>\r\n            </React.Fragment>\r\n          );\r\n        })}\r\n      </Col>\r\n    </>\r\n  );\r\n};\r\n\r\nfunction Spinners() {\r\n  return (\r\n    <>\r\n      <h3 className=\"h4 text-success font-weight-bold mb-2 mt-5\">Spinners</h3>\r\n      <Row>\r\n        <SpinnersBase type=\"border\" />\r\n        <SpinnersBase type=\"grow\" />\r\n      </Row>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Spinners;\r\n"]},"metadata":{},"sourceType":"module"}