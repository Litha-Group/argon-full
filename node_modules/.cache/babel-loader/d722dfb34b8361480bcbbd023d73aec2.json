{"ast":null,"code":"var _jsxFileName = \"/home/ianwallace/lithalabs/argon/src/components/modals/ModalLarge.js\";\nimport React from \"react\"; // reactstrap components\n\nimport { Button, Modal } from \"reactstrap\"; // Core Components\n\nfunction ModalLarge() {\n  const [modalOpen, setModalOpen] = React.useState(false);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n    className: \"mb-3\",\n    color: \"primary\",\n    onClick: () => setModalOpen(!modalOpen),\n    type: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }\n  }, \"Large modal\"), /*#__PURE__*/React.createElement(Modal, {\n    isOpen: modalOpen,\n    toggle: () => setModalOpen(!modalOpen),\n    className: \"modal-lg\",\n    modalClassName: \" bd-example-modal-lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"modal-title\",\n    id: \"exampleModalScrollableTitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }\n  }, \"Modal title\"), /*#__PURE__*/React.createElement(\"button\", {\n    \"aria-label\": \"Close\",\n    className: \"close\",\n    onClick: () => setModalOpen(!modalOpen),\n    type: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    \"aria-hidden\": true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, \"\\xD7\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, \"The time is now for it to be okay to be great. People in this world shun people for being great. For being a bright color. For standing out. But the time is now to be okay to be the greatest you. Would you believe in what you believe in, if you were the only one who believed it? \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }), \"I always felt like I could do anything. That\\u2019s the main thing people are controlled by! Thoughts- their perception of themselves! They're slowed down by their perception of themselves. If you're taught you can\\u2019t do anything, you won\\u2019t do anything. I was taught I could do everything.\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-footer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"secondary\",\n    onClick: () => setModalOpen(!modalOpen),\n    type: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }, \"Close\"), /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    type: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }, \"Save changes\"))));\n}\n\nexport default ModalLarge;","map":{"version":3,"sources":["/home/ianwallace/lithalabs/argon/src/components/modals/ModalLarge.js"],"names":["React","Button","Modal","ModalLarge","modalOpen","setModalOpen","useState"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,YAA9B,C,CAEA;;AAEA,SAASC,UAAT,GAAsB;AACpB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,KAAK,CAACM,QAAN,CAAe,KAAf,CAAlC;AACA,sBACE,uDACE,oBAAC,MAAD;AACE,IAAA,SAAS,EAAC,MADZ;AAEE,IAAA,KAAK,EAAC,SAFR;AAGE,IAAA,OAAO,EAAE,MAAMD,YAAY,CAAC,CAACD,SAAF,CAH7B;AAIE,IAAA,IAAI,EAAC,QAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,eASE,oBAAC,KAAD;AACE,IAAA,MAAM,EAAEA,SADV;AAEE,IAAA,MAAM,EAAE,MAAMC,YAAY,CAAC,CAACD,SAAF,CAF5B;AAGE,IAAA,SAAS,EAAC,UAHZ;AAIE,IAAA,cAAc,EAAC,sBAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAME;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAC,aAAd;AAA4B,IAAA,EAAE,EAAC,6BAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,eAIE;AACE,kBAAW,OADb;AAEE,IAAA,SAAS,EAAC,OAFZ;AAGE,IAAA,OAAO,EAAE,MAAMC,YAAY,CAAC,CAACD,SAAF,CAH7B;AAIE,IAAA,IAAI,EAAC,QAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAME;AAAM,mBAAa,IAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANF,CAJF,CANF,eAmBE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8SAKM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALN,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,+SAnBF,eA+BE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AACE,IAAA,KAAK,EAAC,WADR;AAEE,IAAA,OAAO,EAAE,MAAMC,YAAY,CAAC,CAACD,SAAF,CAF7B;AAGE,IAAA,IAAI,EAAC,QAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,eAQE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,SAAd;AAAwB,IAAA,IAAI,EAAC,QAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBARF,CA/BF,CATF,CADF;AAwDD;;AAED,eAAeD,UAAf","sourcesContent":["import React from \"react\";\n\n// reactstrap components\nimport { Button, Modal } from \"reactstrap\";\n\n// Core Components\n\nfunction ModalLarge() {\n  const [modalOpen, setModalOpen] = React.useState(false);\n  return (\n    <>\n      <Button\n        className=\"mb-3\"\n        color=\"primary\"\n        onClick={() => setModalOpen(!modalOpen)}\n        type=\"button\"\n      >\n        Large modal\n      </Button>\n      <Modal\n        isOpen={modalOpen}\n        toggle={() => setModalOpen(!modalOpen)}\n        className=\"modal-lg\"\n        modalClassName=\" bd-example-modal-lg\"\n      >\n        <div className=\"modal-header\">\n          <h5 className=\"modal-title\" id=\"exampleModalScrollableTitle\">\n            Modal title\n          </h5>\n          <button\n            aria-label=\"Close\"\n            className=\"close\"\n            onClick={() => setModalOpen(!modalOpen)}\n            type=\"button\"\n          >\n            <span aria-hidden={true}>×</span>\n          </button>\n        </div>\n        <div className=\"modal-body\">\n          The time is now for it to be okay to be great. People in this world\n          shun people for being great. For being a bright color. For standing\n          out. But the time is now to be okay to be the greatest you. Would you\n          believe in what you believe in, if you were the only one who believed\n          it? <br></br>\n          <br></br>I always felt like I could do anything. That’s the main thing\n          people are controlled by! Thoughts- their perception of themselves!\n          They're slowed down by their perception of themselves. If you're\n          taught you can’t do anything, you won’t do anything. I was taught I\n          could do everything.\n        </div>\n        <div className=\"modal-footer\">\n          <Button\n            color=\"secondary\"\n            onClick={() => setModalOpen(!modalOpen)}\n            type=\"button\"\n          >\n            Close\n          </Button>\n          <Button color=\"primary\" type=\"button\">\n            Save changes\n          </Button>\n        </div>\n      </Modal>\n    </>\n  );\n}\n\nexport default ModalLarge;\n"]},"metadata":{},"sourceType":"module"}