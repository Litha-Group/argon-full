{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rohan\\\\Desktop\\\\Projects\\\\litha_argon\\\\src\\\\components\\\\index-page\\\\TooltipsPopovers.js\";\nimport React from \"react\"; // reactstrap components\n\nimport { Button, Row, Col, Tooltip, Popover, PopoverBody, PopoverHeader } from \"reactstrap\"; // Core Components\n\nconst colors = [\"primary\", \"info\", \"success\", \"warning\", \"danger\", \"default\", \"secondary\"];\nconst positions = [\"left\", \"top\", \"bottom\", \"right\"];\n\nconst TooltipExample = _ref => {\n  let {\n    placement,\n    color,\n    idKey\n  } = _ref;\n  const [tooltipOpen, setTooltipOpen] = React.useState(false);\n  const id = \"tooltip-\" + placement + \"-\" + color + \"-\" + idKey;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n    className: \"btn-tooltip\",\n    \"data-toggle\": \"tooltip\",\n    color: color,\n    id: id,\n    size: \"sm\",\n    type: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, color !== \"dark\" ? color : \"on \" + placement), /*#__PURE__*/React.createElement(Tooltip, {\n    delay: 0,\n    placement: \"top\",\n    target: id,\n    isOpen: tooltipOpen,\n    toggle: () => setTooltipOpen(!tooltipOpen),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, \"Tooltip on top\"));\n};\n\nconst PopoverExample = _ref2 => {\n  let {\n    placement,\n    color,\n    idKey\n  } = _ref2;\n  const [popoverOpen, setPopoverOpen] = React.useState(false);\n  const id = \"popover-\" + placement + \"-\" + color + \"-\" + idKey;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n    color: color,\n    id: id,\n    size: \"sm\",\n    type: \"button\",\n    \"data-toggle\": \"popover\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, color !== \"dark\" ? color : \"on \" + placement), /*#__PURE__*/React.createElement(Popover, {\n    delay: 0,\n    placement: placement,\n    target: id,\n    isOpen: popoverOpen,\n    toggle: () => setPopoverOpen(!popoverOpen),\n    popperClassName: color !== \"dark\" ? \"popover-\" + color : \"\",\n    trigger: \"focus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(PopoverHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, \"Popover on \", placement), /*#__PURE__*/React.createElement(PopoverBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, \"Vivamus sagittis lacus vel augue laoreet rutrum faucibus.\")));\n};\n\nfunction Index() {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n    className: \"tooltips-popovers\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    lg: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"h4 text-success font-weight-bold mt-md mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  }, \"Tooltips\"), /*#__PURE__*/React.createElement(\"small\", {\n    className: \"d-block text-uppercase font-weight-bold mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  }, \"Colors\"), colors.map((prop, key) => {\n    return /*#__PURE__*/React.createElement(TooltipExample, {\n      key: key,\n      idKey: key,\n      color: prop,\n      placement: \"top\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 15\n      }\n    });\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"small\", {\n    className: \"d-block text-uppercase font-weight-bold mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 11\n    }\n  }, \"Position\"), positions.map((prop, key) => {\n    return /*#__PURE__*/React.createElement(TooltipExample, {\n      key: key,\n      idKey: key,\n      color: \"dark\",\n      placement: prop,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 15\n      }\n    });\n  })), /*#__PURE__*/React.createElement(Col, {\n    className: \"mt-4 mt-lg-0\",\n    lg: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"h4 text-success font-weight-bold mt-md mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 11\n    }\n  }, \"Popovers\"), /*#__PURE__*/React.createElement(\"small\", {\n    className: \"d-block text-uppercase font-weight-bold mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 11\n    }\n  }, \"Colors\"), colors.map((prop, key) => {\n    return /*#__PURE__*/React.createElement(PopoverExample, {\n      key: key,\n      idKey: key,\n      color: prop,\n      placement: \"top\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 15\n      }\n    });\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"small\", {\n    className: \"d-block text-uppercase font-weight-bold mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 11\n    }\n  }, \"Position\"), positions.map((prop, key) => {\n    return /*#__PURE__*/React.createElement(PopoverExample, {\n      key: key,\n      idKey: key,\n      color: \"dark\",\n      placement: prop,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 15\n      }\n    });\n  }))));\n}\n\nexport default Index;","map":{"version":3,"sources":["C:/Users/Rohan/Desktop/Projects/litha_argon/src/components/index-page/TooltipsPopovers.js"],"names":["React","Button","Row","Col","Tooltip","Popover","PopoverBody","PopoverHeader","colors","positions","TooltipExample","placement","color","idKey","tooltipOpen","setTooltipOpen","useState","id","PopoverExample","popoverOpen","setPopoverOpen","Index","map","prop","key"],"mappings":"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","sourcesContent":["import React from \"react\";\r\n\r\n// reactstrap components\r\nimport {\r\n  Button,\r\n  Row,\r\n  Col,\r\n  Tooltip,\r\n  Popover,\r\n  PopoverBody,\r\n  PopoverHeader,\r\n} from \"reactstrap\";\r\n\r\n// Core Components\r\nconst colors = [\r\n  \"primary\",\r\n  \"info\",\r\n  \"success\",\r\n  \"warning\",\r\n  \"danger\",\r\n  \"default\",\r\n  \"secondary\",\r\n];\r\n\r\nconst positions = [\"left\", \"top\", \"bottom\", \"right\"];\r\n\r\nconst TooltipExample = ({ placement, color, idKey }) => {\r\n  const [tooltipOpen, setTooltipOpen] = React.useState(false);\r\n  const id = \"tooltip-\" + placement + \"-\" + color + \"-\" + idKey;\r\n  return (\r\n    <>\r\n      <Button\r\n        className=\"btn-tooltip\"\r\n        data-toggle=\"tooltip\"\r\n        color={color}\r\n        id={id}\r\n        size=\"sm\"\r\n        type=\"button\"\r\n      >\r\n        {color !== \"dark\" ? color : \"on \" + placement}\r\n      </Button>\r\n      <Tooltip\r\n        delay={0}\r\n        placement=\"top\"\r\n        target={id}\r\n        isOpen={tooltipOpen}\r\n        toggle={() => setTooltipOpen(!tooltipOpen)}\r\n      >\r\n        Tooltip on top\r\n      </Tooltip>\r\n    </>\r\n  );\r\n};\r\n\r\nconst PopoverExample = ({ placement, color, idKey }) => {\r\n  const [popoverOpen, setPopoverOpen] = React.useState(false);\r\n  const id = \"popover-\" + placement + \"-\" + color + \"-\" + idKey;\r\n  return (\r\n    <>\r\n      <Button\r\n        color={color}\r\n        id={id}\r\n        size=\"sm\"\r\n        type=\"button\"\r\n        data-toggle=\"popover\"\r\n      >\r\n        {color !== \"dark\" ? color : \"on \" + placement}\r\n      </Button>\r\n      <Popover\r\n        delay={0}\r\n        placement={placement}\r\n        target={id}\r\n        isOpen={popoverOpen}\r\n        toggle={() => setPopoverOpen(!popoverOpen)}\r\n        popperClassName={color !== \"dark\" ? \"popover-\" + color : \"\"}\r\n        trigger=\"focus\"\r\n      >\r\n        <PopoverHeader>Popover on {placement}</PopoverHeader>\r\n        <PopoverBody>\r\n          Vivamus sagittis lacus vel augue laoreet rutrum faucibus.\r\n        </PopoverBody>\r\n      </Popover>\r\n    </>\r\n  );\r\n};\r\n\r\nfunction Index() {\r\n  return (\r\n    <>\r\n      <Row className=\"tooltips-popovers\">\r\n        <Col lg=\"6\">\r\n          <h3 className=\"h4 text-success font-weight-bold mt-md mb-4\">\r\n            Tooltips\r\n          </h3>\r\n          <small className=\"d-block text-uppercase font-weight-bold mb-3\">\r\n            Colors\r\n          </small>\r\n          {colors.map((prop, key) => {\r\n            return (\r\n              <TooltipExample\r\n                key={key}\r\n                idKey={key}\r\n                color={prop}\r\n                placement=\"top\"\r\n              />\r\n            );\r\n          })}\r\n          <br></br>\r\n          <br></br>\r\n          <small className=\"d-block text-uppercase font-weight-bold mb-3\">\r\n            Position\r\n          </small>\r\n          {positions.map((prop, key) => {\r\n            return (\r\n              <TooltipExample\r\n                key={key}\r\n                idKey={key}\r\n                color=\"dark\"\r\n                placement={prop}\r\n              />\r\n            );\r\n          })}\r\n        </Col>\r\n        <Col className=\"mt-4 mt-lg-0\" lg=\"6\">\r\n          <h3 className=\"h4 text-success font-weight-bold mt-md mb-4\">\r\n            Popovers\r\n          </h3>\r\n          <small className=\"d-block text-uppercase font-weight-bold mb-3\">\r\n            Colors\r\n          </small>\r\n          {colors.map((prop, key) => {\r\n            return (\r\n              <PopoverExample\r\n                key={key}\r\n                idKey={key}\r\n                color={prop}\r\n                placement=\"top\"\r\n              />\r\n            );\r\n          })}\r\n          <br></br>\r\n          <br></br>\r\n          <small className=\"d-block text-uppercase font-weight-bold mb-3\">\r\n            Position\r\n          </small>\r\n          {positions.map((prop, key) => {\r\n            return (\r\n              <PopoverExample\r\n                key={key}\r\n                idKey={key}\r\n                color=\"dark\"\r\n                placement={prop}\r\n              />\r\n            );\r\n          })}\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Index;\r\n"]},"metadata":{},"sourceType":"module"}